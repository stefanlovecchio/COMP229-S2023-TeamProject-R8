<%- include('../partials/header.ejs') %> 

<%- include('../partials/main_nav.ejs')%>

<!DOCTYPE html>
<html>
<head>
  <title>Survey Editor</title>
</head>
<body>
  <div class="container">
    <div class="col-md-offset-3 col-md-6">
      <h1>Survey Editor</h1>
      <h3><%= survey.title %></h3>
      <form method="POST" action="/edit/<%= survey._id %>">
        <label for="title">Title: </label>
        <input type="text" name="title" value="<%= survey.title %>"><br /><br />
        <div id="questions-container">
          <!-- create text input elements for all questions in the survey-->
          <% for(let i = 0; i < survey.questions.length; i++) { %>
            <label for="questions<%= i %>">Question <%= i + 1 %></label><br />
            <div class="question">
              <input type="text" name="questions[<%= i %>][question]" value="<%= survey.questions[i].question %>">
              <!-- create drop down menu for question type-->
              <label for="questionType">Question type: </label>
          <select id="questionType" name="questions[<%= i %>][questionType]">
            <option value="radio" <%= survey.questions[i].questionType == "radio" ? "selected" : "" %>>Single Choice</option>
        <option value="checkbox" <%= survey.questions[i].questionType == "checkbox" ? "selected" : "" %>>Multiple Choice</option>
        <option value="text" <%= survey.questions[i].questionType == "text" ? "selected" : "" %>>Text</option>
        <option value="range" <%= survey.questions[i].questionType == "range" ? "selected" : "" %>>Slider</option>
        <option value="image" <%= survey.questions[i].questionType == "image" ? "selected" : "" %>>Image</option>
          </select>
              <button type="button" id="remove-question-btn">Remove Question</button>
              <div id="answers-container">
                <!-- create input elements for answers for each question-->
                <% for(let j = 0; j < survey.questions[i].answers.length; j++) { %>
                  <div class="answer">
                    <label for="answer<%= i %>_<%= j %>"> Answer <%= j + 1 %>:</label><br />
                    <input type="text" name="questions[<%= i %>][answers][<%= j %>]" value="<%= survey.questions[i].answers[j] %>">
                    <button type="button" class="remove-answer-btn">Remove Answer</button>
                  </div>
                <% } %>
                <button type="button" class="add-answer-btn" id="add-answer-btn">Add Answer</button><br /><br />
              </div>
            </div><br />
          <% } %>
          <button class="add-question-btn" id="add-question-btn">Add Question</button><br /><br />
        </div>
        <div style="margin-bottom: 3rem; display: grid; justify-content: space-around;">
          <!-- submit and cancel buttons -->
          <button class="btn btn-primary" type="submit">
            <i class="fa fa-check-square-o"></i> Submit
          </button>
          <a href="/surveys" class="btn btn-warning">
            <i class="fa fa-undo"></i> Cancel
          </a>
        </div>
      </form>
    </div>
  </div>
</body>
</html>

<!--Add new questions & answers dynamically -->
  <script>
    // get existing answer & question buttons
const existingAnsBtn = document.querySelectorAll('#add-answer-btn');
const addQuestionBtn = document.getElementById('add-question-btn');
const questionsContainer = document.getElementById('questions-container');
// get form container element
const row = document.getElementById('row');
//add question click event
addQuestionBtn.addEventListener('click', () => {
  //find current question number
  let questionCount = document.querySelectorAll('.question').length;
  //create a question container
  const questionDiv = document.createElement('div');
  questionDiv.classList.add('question');
  //create label for current question
  const questionLabel = document.createElement('label');
  questionLabel.classList.add('question-label');
  questionLabel.textContent = `Question ${questionCount}`;
  //create text input for question
  const questionText = document.createElement('input');
  questionText.type = 'text';
  questionText.classList.add('question-text');
  questionText.name = `questions[${questionCount}][question]`;
  questionText.placeholder = 'Question Text';
  questionText.required = true;
  //add question type selector & options
  const qTypeLabel = document.createElement('label');
      qTypeLabel.innerHTML = 'Question Type:';
      const qTypeSelect = document.createElement('select');
      qTypeSelect.name = `questions[${questionCount}][questionType]`;
      let newOption1 = new Option('Single Choice', 'radio');
      qTypeSelect.add(newOption1)
      let newOption2 = new Option('Multiple Choice', 'checkbox');
      qTypeSelect.add(newOption2);
      let newOption3 = new Option('Text', 'text');
      qTypeSelect.add(newOption3);
      let newOption4 = new Option('Slider', 'range');
      qTypeSelect.add(newOption4);
      //create answers container
  const answersContainer = document.createElement('div');
  answersContainer.classList.add('answers-container');
  //create add answer button
  const addAnswerBtn = document.createElement('button');
  addAnswerBtn.type = 'button';
  addAnswerBtn.classList.add('add-answer-btn');
  addAnswerBtn.textContent = 'Add Answer';
  //add answer button click event
  addAnswerBtn.addEventListener('click', () => {
    //get answer count within current question
  let answerIndex = event.target.parentNode.querySelectorAll('.answer').length; 
  //create answer container 
  const answerDiv = document.createElement('div');
  answerDiv.classList.add('answer');
  //create text input for answer
  const answerText = document.createElement('input');
  answerText.type = 'text';
  answerText.name = `questions[${questionCount}][answers][${answerIndex}]`;
  answerText.placeholder = 'Answer Text';
  answerText.required = true;
  //crate remove answer button
  const removeAnswerBtn = document.createElement('button');
  removeAnswerBtn.type = 'button';
  removeAnswerBtn.textContent = 'Remove Answer';
  //remove answer click event
  removeAnswerBtn.addEventListener('click', () => {
    //remove the answer
    answerDiv.remove();
    // Update the count of answers for this question
    questionCount--;
  });
  //attach question label, answer text, remove answer button to answer container
answerDiv.appendChild(questionLabel);
  answerDiv.appendChild(answerText);
  answerDiv.appendChild(removeAnswerBtn);
  answersContainer.appendChild(answerDiv);
});
//create remove question button
  const removeQuestionBtn = document.createElement('button');
  removeQuestionBtn.type = 'button';
  removeQuestionBtn.classList.add('remove-question-btn');
  removeQuestionBtn.textContent = 'Remove Question';
  //remove question click event
  removeQuestionBtn.addEventListener('click', () => {
    questionDiv.remove();
  });
  //attach question, label, type selector, answer container, add answer button to question container
  questionDiv.appendChild(questionText);
  questionDiv.appendChild(qTypeLabel);
      questionDiv.appendChild(qTypeSelect);
  questionDiv.appendChild(answersContainer);
  questionDiv.appendChild(addAnswerBtn);
  questionDiv.appendChild(removeQuestionBtn);
  // check if there are existing questions
  let allQuestions = Array.from(document.querySelectorAll('.question'));
          if (allQuestions.length > 0) {
            // get the last question
            const lastQuestion = allQuestions[allQuestions.length - 1];
            // insert the new question after the last question
            lastQuestion.insertAdjacentElement('afterend', questionDiv);
          } else {
            // if no questions exist, append to questionsContainer as fallback
            questionsContainer.appendChild(questionDiv);
          }
});

//add click event listener to each existing add-answer-button
for (let i = 0; i < existingAnsBtn.length; i++) {
  existingAnsBtn[i].addEventListener('click', () => {
    //get answer count
    const answerIndex = event.target.parentNode.querySelectorAll('.answer').length;
    //create answer container & answer input
    const answerDiv = document.createElement('div');
    answerDiv.classList.add('answer');
    const answerText = document.createElement('input');
    answerText.type = 'text';
    answerText.classList.add('answer-text');
    answerText.name = `questions[${getQuestionIndex()}][answers][${answerIndex}]`;
    answerText.placeholder = 'Answer Text';
    //create remove answer button
    const removeAnswerBtn = document.createElement('button');
    removeAnswerBtn.type = 'button';
    removeAnswerBtn.classList.add('remove-answer-btn');
    removeAnswerBtn.textContent = 'Remove Answer';
    removeAnswerBtn.addEventListener('click', () => {
      answerDiv.remove();
    });
    //attach answer elements to the parent container of the clicked add-answer-button
    answerDiv.appendChild(answerText);
    answerDiv.appendChild(removeAnswerBtn);
    let par = existingAnsBtn[i].parentNode;
    par.insertBefore(answerDiv, existingAnsBtn[i]);
  });
}
// add click listener to existing remove question buttons
  const existingQuestRmvBtns = document.querySelectorAll('#remove-question-btn');
  for (let i = 0; i < existingQuestRmvBtns.length; i++) {
    existingQuestRmvBtns[i].addEventListener('click', () => {
      existingQuestRmvBtns[i].parentElement.remove();
      questionCount--;
    });
}

//add click listener to existing remove question button
  const existingAnsRmvBtns = document.querySelectorAll('.remove-answer-btn');
  for (let i =0; i < existingAnsRmvBtns.length; i++) {
    existingAnsRmvBtns[i].addEventListener('click', () => {
      existingAnsRmvBtns[i].parentElement.remove();
    });
  }
//get question index
  function getQuestionIndex() {
      let allQuestions = Array.from(document.querySelectorAll('.question'));
      console.log(allQuestions);
      let currentQuestion = event.target.closest('.question');
      let questionIndex = allQuestions.indexOf(currentQuestion);
      return questionIndex;
    }
</script>
</body>

<%- include('../partials/bottom_nav.ejs') %> 
<%-include('../partials/footer.ejs') %>
